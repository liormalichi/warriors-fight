{"version":3,"sources":["component/HomePage.jsx","component/GamePage.jsx","component/EndGamePage.jsx","App.js","index.js"],"names":["HomePage","props","useState","isValid","setIsValid","name","setName","class","className","onChange","e","length","nameValidition","target","value","type","placeholder","onClick","changePlayerName","changePage","alert","GamePage","round","setRound","playerPoints","setplayerPoints","pcPoints","setpcPoints","pcCards","setPcCards","playerCards","setPlayerCards","shownPc","setshownPc","shownPlayer","setshownPlayer","id","values","deck","map","suit","flat","i","pos","Math","floor","random","temp","slice","pc","parseInt","player","status","won","loss","create","c","document","getElementById","innerHTML","changeNameToNext","EndGamePage","wins","losses","sentance","App","pages","currentPage","setCurrentPage","playerName","setplayerName","status1","setstatus","setWins","setlosses","page","changeName","changestatus","setTheWins","setTheLosses","switchPage","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3cb8e48c.chunk.js","sourcesContent":["import React from 'react'\r\nimport Header from \"./Header\"\r\nimport {useState} from 'react'\r\nimport '../App.css'\r\n\r\nexport default function HomePage(props) {\r\n    \r\n    const [isValid, setIsValid] = useState(false)\r\n    const [name, setName] = useState(\"\")\r\n\r\n    const start = () =>{\r\n        if (isValid == true){\r\n            props.changePlayerName(name)\r\n            props.changePage(\"game\")\r\n\r\n        }\r\n\r\n        else{\r\n            alert(\"please enter a name with 1 to 6 characters\")\r\n        }\r\n    }\r\n    \r\n    const nameValidition = (name)=>{\r\n        if ((name != '') && (name.length <6)){\r\n            setName(name)\r\n            setIsValid(true)\r\n        }\r\n        else{\r\n            setIsValid(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div class=\"homePage\">\r\n            <div className=\"title1\">WARRIORS</div>              \r\n            <input onChange={e => nameValidition(e.target.value)} type=\"text\" placeholder=\"NickName up to 5 chars\"/>\r\n            <div class=\"btn\" onClick= {start}> let the games begin</div>\r\n            <div className=\"img\" ></div>\r\n            <div className=\"img_left\" ></div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport Header from \"./Header\"\r\n\r\n\r\nexport default function GamePage(props) {\r\n    \r\n    const [round, setRound] = useState(-1)\r\n    const [playerPoints, setplayerPoints] = useState(0)\r\n    const [pcPoints, setpcPoints] = useState(0)\r\n    const [pcCards, setPcCards] = useState([[]])\r\n    const [playerCards, setPlayerCards] = useState([[]])\r\n    const [shownPc, setshownPc] = useState(\"\")\r\n    const [shownPlayer, setshownPlayer] = useState(\"\")\r\n\r\n    const name = props.name\r\n       \r\n\r\n\r\n    const showCardPc= ()=>{\r\n        if (round ==-1)\r\n            setshownPc(pcCards[0][0])     \r\n        else\r\n            setshownPc(pcCards[round][0])   \r\n    }\r\n\r\n    const showCardPlayer= ()=>{\r\n        if (round ==-1)\r\n            setshownPlayer(playerCards[0][0])\r\n        else\r\n            setshownPlayer(playerCards[round][0])\r\n\r\n    }\r\n\r\n    const create = () =>{\r\n        \r\n\r\n        // const play = (pcCards,playerCards)=>{\r\n        //     console.log(pcCards, playerCards)\r\n        // }\r\n        //creating the deck givng only first card\r\n        if (round == -1){            \r\n            const suits = [\"spades\", \"diamonds\", \"clubs\", \"hearts\"]\r\n            const values = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\"]    \r\n            const deck = suits.map(suit =>values.map(value => [value,suit])).flat()\r\n            \r\n            for(let i=1; i<=10000; i++){\r\n                const pos = Math.floor((52 * Math.random()))\r\n                const temp = deck[(i%51)]\r\n                deck[(i%51)] = deck[pos]\r\n                deck[pos] = temp            \r\n            }\r\n            const player = setPcCards(deck.slice(0,26))\r\n            const pc = setPlayerCards(deck.slice(26,52))\r\n            setRound(round+1)\r\n            \r\n        }\r\n\r\n        //gives pc and player new crad\r\n        else{\r\n            const pc = parseInt(pcCards[round][0])\r\n            const player = parseInt(playerCards[round][0])  \r\n\r\n            if(round>=25){\r\n                if (pcPoints>=playerPoints){\r\n                    props.status(\"LOSE\")\r\n                    props.won(1)\r\n                }\r\n                else{\r\n                    props.loss(1)\r\n                    props.status(\"WIN\")\r\n                }\r\n                return props.changePage(\"end\")               \r\n            }\r\n             if(pc != player){\r\n    \r\n                if(pc>player){\r\n                     setpcPoints(pcPoints+1)\r\n                }\r\n                else{\r\n                     setplayerPoints(playerPoints+1)\r\n                }\r\n            }\r\n            setRound(round+1)\r\n\r\n        }\r\n    }\r\n   \r\n    //console.log(pcCards, playerCards)\r\n\r\n    const changeNameToNext = ()=>{\r\n        const c = document.getElementById(\"create\")\r\n        if (c.innerHTML == \"CREATE\")\r\n            c.innerHTML = \"GO!\";\r\n        else {\r\n            if(round ==24)\r\n                c.innerHTML = \"FINISH\";\r\n            else {\r\n                if(round >=0)\r\n                    c.innerHTML = \"NEXT\";\r\n            \r\n            }\r\n        }\r\n    }\r\n\r\n  \r\n    \r\n        return (\r\n        <div>\r\n            <div className='title2'>WAR</div>\r\n            <div class=\"container\">\r\n                <div class=\"pcPoints\">{pcPoints}</div>\r\n                <div class=\"card \">\r\n                    <div class=\"innerCardPc cardShown\">{shownPc}</div>\r\n                </div>\r\n                <div class=\"pc\">PC</div>\r\n\r\n                <div class=\"none\"></div>\r\n                <div class=\"button\">\r\n                    <button id=\"create\" onClick= {() => {create(); changeNameToNext();showCardPc();showCardPlayer()}}>CREATE</button>                \r\n                </div>\r\n                <div class=\"none2\"></div>\r\n\r\n                <div class=\"playerPoints\">{playerPoints}</div>\r\n                <div class=\"card \">\r\n                    <div class=\"innerCardPlayer cardShown\">{shownPlayer}</div>\r\n                </div>\r\n                <div class=\"player\">{name}</div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n            \r\n\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport Header from \"./Header\"\r\n\r\n\r\nexport default function EndGamePage(props) {\r\n    \r\n    const name = props.name\r\n    const status = props.status\r\n    const wins = props.wins\r\n    const losses = props.losses\r\n    \r\n    let sentance = \"\"\r\n    if ((status == \"WIN\" ))\r\n        sentance = `Congrats ${name}, you WIN`\r\n    \r\n        else {\r\n        sentance = `Sorry ${name}, you lose`\r\n\r\n    }\r\n    \r\n    const start = () =>{\r\n        props.changePage(\"game\")\r\n        \r\n    }\r\n\r\n    return (\r\n        <div class=\"endPage\">\r\n            <div className='title2'>{sentance}</div>\r\n            {/* <Header title = {sentance} /> */}\r\n            <div>\r\n                <div class=\"result\">{wins} - {losses}</div>\r\n                <br></br>\r\n                <button  onClick= {start}> AGAIN!</button>              \r\n\r\n            </div>\r\n            <div className=\"img\" ></div>\r\n            <div className=\"img_left\" ></div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport HomePage from './component/HomePage';\nimport GamePage from './component/GamePage';\nimport EndGame from './component/EndGamePage';\nimport React, {useState} from 'react'\n\nfunction App() {\n\n  const pages = {\n    home: 'home',\n    game: 'game',\n    end: 'end'\n  }\n\n  const [currentPage, setCurrentPage] = useState(\"home\")\n  const [playerName, setplayerName] = useState(\"sdf\")\n  const [status1, setstatus] = useState(\"\")\n  const [wins, setWins] = useState(0)\n  const [losses, setlosses] = useState(0)\n\n  \n  const changePage = (page) => setCurrentPage(page)\n  const changeName = (name) => setplayerName(name)\n  const changestatus = (status) => setstatus(status)\n  \n  const setTheWins = (won) => {\n    if (won == 1)\n      setWins(parseInt(wins)+1)\n  }\n\n  const setTheLosses = (loss) => {\n    if (loss == 1)\n    setlosses(parseInt(losses)+1)\n  }\n\n\n  const switchPage =  (page) =>{\n    switch(page){\n      case pages.home:\n        return <HomePage changePlayerName={changeName} changePage={changePage} />\n      \n      case pages.game:\n        return <GamePage name ={playerName} changePage={changePage} status={changestatus} won ={setTheWins} loss ={setTheLosses} />\n  \n      \n      case pages.end:\n        return <EndGame name ={playerName} status={status1} changePage={changePage} wins ={wins} losses ={losses}/>\n  \n   }\n  }\n     \n\n  return (\n    <div className=\"App\">\n      {switchPage(currentPage)}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}